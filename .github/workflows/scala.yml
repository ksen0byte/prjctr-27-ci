name: Scala CI

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      release:
        description: 'Perform a release (true/false)'
        required: true
        default: 'false'

jobs:

  build_jar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Scala
      uses: olafurpg/setup-scala@v11
      with:
        java-version: 21
    - name: Build Fat JAR
      run: sbt assembly
    - name: Upload JAR as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: scala-fat-jar
        path: target/scala-3.3.1/prjct-27-ci-assembly-0.1.0-SNAPSHOT.jar

  unit_test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: 21
      - name: Run Unit Tests
        run: sbt "testOnly HelloTest"

  integration_test:
      runs-on: ubuntu-latest
      needs: [build_jar, unit_test]
      steps:
      - uses: actions/checkout@v4
      - name: Setup Scala
        uses: olafurpg/setup-scala@v11
        with:
          java-version: 21
      - name: Run Integration Tests
        run: sbt "testOnly SimpleTestServerIntegrationTest"

  deploy_staging:
      runs-on: ubuntu-latest
      needs: [integration_test]
      steps:
      - name: Deploy to staging
        run: echo "Deploy to staging"

  acceptance_test:
      runs-on: ubuntu-latest
      needs: [deploy_staging]
      steps:
      - name: Running acceptance tests
        run: echo "Testing things in staging"

  deploy_production:
      runs-on: ubuntu-latest
      needs: [acceptance_test]
      steps:
      - name: Deploy to production
        run: echo "Deploying to production"

  post_deploy_production_test:
      runs-on: ubuntu-latest
      needs: [deploy_production]
      steps:
      - name: Post deploy production test
        run: echo "Testing things in production"

  release:
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release == 'true' }}
      runs-on: ubuntu-latest
      needs: [post_deploy_production_test]
      environment: release_environment
      steps:
      - name: Release to Production
        run: echo "This is a mock release to production. Normally, deployment scripts would run here."
